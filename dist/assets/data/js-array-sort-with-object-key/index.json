{"hash":"8f5d2da4bd612b0bc4d056d7cb77c1bed784ec30","data":{"post":{"title":"JS array sort with object key","path":"/js-array-sort-with-object-key/","date":"23rd April 2019","timeToRead":1,"tags":[{"id":"Javascript","title":"Javascript","path":"/tag/Javascript/"}],"description":"Sorting is as easy as 1,2,3... yeah... I know....","content":"<p>If you have a list of objects like so:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> readings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">40.3</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">'preferment'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">10.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">'post fridge retardation'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">20.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">'pre oven'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n<p>If you want to sort this list by <code>temp</code> and you try and run <code>readings.sort()</code> nothing will happen - it will return the array in same order as JS doesn't know what you're trying to do.  To help, you need to provide a custom compare function to sort.  A basic compare function to compare two numbers (<em>a</em>, and <em>b</em>) looks like this:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">myCompare</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<p>All we need to do is tell this function to use our desired key:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">tempCompare</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token property-access\">temp</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token property-access\">temp</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<p>Now we can run <code>readings.sort(tempCompare)</code> and you'll now have the following:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">10.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"post fridge retardation\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">20.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"pre oven\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">40.3</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"preferment\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n<p>If you wanted this list in descending order then you alter the return values in the <code>tempCompare(a,b)</code> function like so:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">tempCompareDesc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token property-access\">temp</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token property-access\">temp</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//This is now -1 instead of 1</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//This is now 1 instead of -1</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<p>Then you'll have:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">40.3</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"preferment\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">20.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"pre oven\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>temp<span class=\"token operator\">:</span> <span class=\"token number\">10.1</span><span class=\"token punctuation\">,</span> stage<span class=\"token operator\">:</span> <span class=\"token string\">\"post fridge retardation\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span></code></pre>\n<p><em>Further reading</em>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort</a></p>\n","cover_image":{"type":"image","mimeType":"image/jpeg","src":"/assets/static/sort.1fdd135.9401e7480af9138faec1cfc0db29ad7b.jpg","size":{"width":1197,"height":768},"sizes":"(max-width: 1197px) 100vw, 1197px","srcset":["/assets/static/sort.a67b0b2.9401e7480af9138faec1cfc0db29ad7b.jpg 480w","/assets/static/sort.1fdd135.9401e7480af9138faec1cfc0db29ad7b.jpg 1197w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1197 768' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-81a4e8ea69a9a23af2467d39f6462074'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-81a4e8ea69a9a23af2467d39f6462074)' width='1197' height='768' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAApAEADASIAAhEBAxEB/8QAGgAAAgMBAQAAAAAAAAAAAAAAAwQAAQIFB//EAC0QAAICAQMCAgoDAQAAAAAAAAECABEDBBIhMXETYSIyM0FCUYGR0eEUcqGx/8QAFwEBAQEBAAAAAAAAAAAAAAAAAAEDBP/EABcRAQEBAQAAAAAAAAAAAAAAAAABESH/2gAMAwEAAhEDEQA/APF8bsNPtR0omjuJseXaCzZtruvh4Seh2iwJrHQS1yAHdyClwOoF5G53EGrVaBm8c1DZr%2bFR2jOmy7SF4BJBF9IrRroYRF3OgA%2bl9ZUOajeleiXscAA0s57MWNkkmNZR4a22OlPQg8wTZMe2lxC/OEBklsb9wHaVCmVyoprfkXmzQHWWXws7FsmfyIA/2LN6x7yoNbyEXSsxX3bppdtpuJA%2bYHSCmn6L2gPLps%2bRAcWZnXmvSH5gMivjF5Hyr8rH7hdG%2bXT4/FUlla1CLz94TJrMj2V07Cz5gD7Sd0JjJz7bIOw/cpsh%2bHI554viR8ikmsSDvZg2NkmgPISiN6x7ypbese8qBJth6K9piPaHqvf8wBfyAMC4gu4Dmzx/yALGzyR9YbW%2b2H9RF4Ekkkgf/9k=' /%3e%3c/svg%3e"}}},"context":{}}