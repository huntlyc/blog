{"hash":"8f5d2da4bd612b0bc4d056d7cb77c1bed784ec30","data":{"tag":{"title":"Docker","belongsTo":{"edges":[{"node":{"title":"WordPress on Docker Quickstart","path":"/wordpress-on-docker-quickstart/","date":"27th January 2018","timeToRead":2,"description":"Super quick guide to getting the official WordPress Docker image running with HTTPS without the need for an additional image for HTTPS proxy. The guide assumes that you know the basics of docker and just want to get an https version of WordPress going.","content":"<p>Super quick guide to getting the official WordPress Docker image running with HTTPS without the need for an additional image for HTTPS proxy. The guide assumes that you know the basics of docker and just want to get an https version of WordPress going.</p>\n<p>This guide assumes you've installed <a href=\"https://docs.docker.com/install/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docker</a> and <a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docker-compose</a>. Just as a point of order - I had permission issues on Arch when I first installed and started the docker service.  It was a long time ago so I can't recall the steps I took to rectify it. Your mileage may vary depending on your platform - but for the purposes of this guide, I hope you're on Linux/OSX!</p>\n<p>Also this guide is pretty much just an expanded version of <a href=\"https://github.com/docker-library/wordpress/issues/46#issuecomment-347409659\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this GitHub issue answer</a> by AlexanderOMara</p>\n<h2 id=\"base-setup\"><a href=\"#base-setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Base Setup</h2>\n<p>Create your project folder - for the rest of this guide, I'll call mine \"projectx\".</p>\n<p>Inside the projectx/ folder create 2 files: <em>Dockerfile</em> and <em>docker-compose.yml</em>. Next, create a directory called <em>wp-app</em>.</p>\n<h2 id=\"dockerfile\"><a href=\"#dockerfile\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dockerfile</h2>\n<p>Here is a base Docker file to get the official WordPress image to use https:</p>\n<pre class=\"language-dockerfile\"><code class=\"language-dockerfile\">    <span class=\"token keyword\">FROM</span> wordpress<span class=\"token punctuation\">:</span>latest\n    <span class=\"token keyword\">RUN</span> apt<span class=\"token punctuation\">-</span>get update &amp;&amp; apt<span class=\"token punctuation\">-</span>get install <span class=\"token punctuation\">-</span>y <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>install<span class=\"token punctuation\">-</span>recommends ssl<span class=\"token punctuation\">-</span>cert &amp;&amp; rm <span class=\"token punctuation\">-</span>r /var/lib/apt/lists/* &amp;&amp; a2enmod ssl &amp;&amp; a2ensite default<span class=\"token punctuation\">-</span>ssl\n    <span class=\"token keyword\">EXPOSE</span> 80 443</code></pre>\n<p>Dockerfile</p>\n<h2 id=\"docker-compose-file\"><a href=\"#docker-compose-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docker Compose File</h2>\n<p>And here is your docker-compose.yml file, swap out environment variables for your own. Also, take note of the example.test part, that's the URL we're going to view the WordPress installation on when the containers are up and running…</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.3'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">wpdb</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db_data<span class=\"token punctuation\">:</span>/var/lib/mysql\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> myRootPassword\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> wp_db_name\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> wp_db_user\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> mySuperSecretPass\n\n  <span class=\"token key atrule\">wp</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> wpdb\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./wp<span class=\"token punctuation\">-</span>app<span class=\"token punctuation\">:</span>/var/www/html\n    <span class=\"token key atrule\">extra_hosts</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"example.test:127.0.0.1\"</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"80:80\"</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"443:443\"</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORDPRESS_DB_HOST</span><span class=\"token punctuation\">:</span> wpdb<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">WORDPRESS_DB_USER</span><span class=\"token punctuation\">:</span> wp_db_user\n      <span class=\"token key atrule\">WORDPRESS_DB_NAME</span><span class=\"token punctuation\">:</span> wp_db_name\n      <span class=\"token key atrule\">WORDPRESS_DB_PASSWORD</span><span class=\"token punctuation\">:</span> mySuperSecretPass\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db_data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre>\n<p><em>docker-compose.yml contents</em></p>\n<h2 id=\"setting-sail\"><a href=\"#setting-sail\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setting Sail</h2>\n<p>You want to run the following command: <strong><code>docker-compse build</code></strong>. This will use the Dockerfile to create the image for the WordPress container, if what I just said sounds like obfuscated English, turn back now and go and read the <a href=\"https://docs.docker.com/get-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker intro</a>.</p>\n<p>Next run <strong><code>docker-compose up</code></strong> and if the sun and stars have aligned in a mystical way, it will build all the required images and get the containers running. You can access all WordPress code in the wp-app folder.</p>\n<p>Happy trails!</p>\n"}}]}}},"context":{}}